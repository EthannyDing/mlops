version: '3'

services:

  db:
    restart: always
    image: postgres:13-alpine
    container_name: postgres_db
    volumes:
      - dbdata:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - backend
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  web:
    restart: on-failure
    image: mlflow_server
    container_name: mlflow_server
    build: ./mlflow
    ports:
      - 5000:5000
    networks:
      - backend
      - frontend
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
    command: mlflow server --backend-store-uri 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}' --default-artifact-root ${AWS_S3_MLFLOW_ARTIFACTS} --host 0.0.0.0
    depends_on:
      - db
    links:
      - db

  nginx:
    restart: always
    build: ./nginx
    image: mlflow_nginx
    container_name: mlflow_nginx
    ports:
      - 80:80
    networks:
      - frontend
    # depends_on:
    #   - web

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  dbdata:
